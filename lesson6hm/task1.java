package org.example.lesson6hm;

import java.util.ArrayList;

public class task1 {
//    а. Приведите пример использования амортизированного анализа в практике.
//    Амортизированный анализ применяется, например, при управлении динамической памятью в операционных системах или языках программирования.
//    Одним из классических примеров является динамический массив,
//    где операция добавления элемента в среднем выполняется за константное время (O(1)),
//    несмотря на то, что иногда требуется перевыделение памяти и копирование данных, что занимает больше времени.

//    В Java амортизированный анализ часто используется в различных структурах данных и алгоритмах
//    для обеспечения эффективности операций в среднем случае. Один из примеров — динамический массив,
//    реализованный в классе ArrayList.

    public static void main(String[] args) {
        ArrayList<Integer> list = new ArrayList<>();

        // Добавление элементов
        for (int i = 0; i < 10; i++) {
            list.add(i);
        }

        // Вывод элементов
        System.out.println("Содержимое ArrayList:");
        for (int num : list) {
            System.out.print(num + " ");
        }
        System.out.println();

        // Добавление еще одного элемента
        list.add(10);

        // Вывод элементов после добавления
        System.out.println("Содержимое ArrayList после добавления:");
        for (int num : list) {
            System.out.print(num + " ");
        }
        System.out.println();
    }
}
